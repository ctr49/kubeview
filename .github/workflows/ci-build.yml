name: CI Build

# This is a generic CI pipeline that assumes project is to be built as a container image
# Note. CI build only builds 'latest' image, not a versioned release

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  IMAGE_REG: ko.local
  IMAGE_NAME: ${{ github.repository }}

permissions:
  packages: write

jobs:
  ci-build:
    name: Code Check & CI build
    runs-on: ubuntu-latest

    steps:
      # Checkout code from repo
      - name: Checkout repo
        uses: actions/checkout@v4

      # Ensures Go is configured properly
      - uses: actions/setup-go@v5
        with:
          go-version: 'stable'
          check-latest: true

      # Validate code
      - name: golangci-lint
        uses: golangci/golangci-lint-action@master
        with:
          skip-cache: true
          working-directory: .
          args: --timeout=3m --modules-download-mode=mod

      # Ensures Node is configured properly
      - uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          check-latest: true
      # Build static content
      - name: NPM Install
        uses: bahmutov/npm-install@v1
        with:
          working-directory: web/client
      - name: NPM Build
        working-directory: web/client
        run: |
          npx vue-cli-service build
          cp -ax dist ../../cmd/server/kodata
        env:
          NODE_OPTIONS: "--openssl-legacy-provider"
          NODE_ENV: production
      - name: Install ko
        uses: ko-build/setup-ko@v0.6
      - name: Run ko
        run: ko build --bare ./cmd/server
        env:
          KO_DOCKER_REPO: ${{ env.IMAGE_REG }}/${{ env.IMAGE_NAME }}
          KO_DEFAULTPLATFORMS: all

      # Cleanup
      - name: Cleanup output directories
        run: rm -rf cmd/server/kodata web/client/dist
