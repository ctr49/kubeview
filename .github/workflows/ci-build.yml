name: CI Build

# This is a generic CI pipeline that assumes project is to be built as a container image
# Note. CI build only builds 'latest' image, not a versioned release

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  IMAGE_TAG: latest

jobs:
  ci-build:
    name: Code Check & CI build
    runs-on: ubuntu-latest

    steps:
      # Checkout code from repo
      - name: Checkout repo
        uses: actions/checkout@v4

      # Ensures Go is configured properly
      - uses: actions/setup-go@v5

      # Validate code
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          skip-cache: true
          working-directory: .
          args: --timeout=3m --modules-download-mode=mod
          
      # Build image
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY}}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) from container
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          file: ./build/Dockerfile
          #tags: ${{ steps.meta.outputs.tags }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          labels: ${{ steps.meta.outputs.labels }}
